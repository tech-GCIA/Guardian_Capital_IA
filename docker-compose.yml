version: '3.9'

services:
  web:
    build: .
    container_name: django_app
    command: gunicorn gcia.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2
    volumes:
      - .:/app
      - ./static:/app/static  # Mount static files from the container to the host machine (optional)
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=django-insecure-pghn3et!0o2m@*vzv)8b7i@jn7_=p=k17nd@y7!%mi-n58fyyz
      - DEBUG=False
      - DB_NAME=guardian_capital_db
      - DB_USER=gcia_admin
      - DB_PASSWORD=Tech#gcia1234
      - DB_HOST=guardian-capital-db.cpgmg2yycen4.ap-south-1.rds.amazonaws.com  # Use the db service name as the host
      - DB_PORT=3306
    depends_on:
      - db

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_DATABASE: guardian_capital_db  # This should match DB_NAME in the web service
      MYSQL_USER: gcia_admin               # This should match DB_USER in the web service
      MYSQL_PASSWORD: Tech#gcia1234         # This should match DB_PASSWORD in the web service
      MYSQL_ROOT_PASSWORD: Tech#gcia1234     # Set a root password
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql  # Persist data to a named volume to retain DB data between restarts

volumes:
  mysqldata:  # Create a named volume for MySQL data persistence
